{"ast":null,"code":"var _jsxFileName = \"/Users/richardulysse/top-100-list/client/src/Components/AlbumSearchComponent.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { spotifyAlbumSearch } from \"../Functions/SpotifyCalls\";\nimport { albumResultsStyle, dialogBackgroundStyle, inputAlbumStyle } from \"../Styles/StyleFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlbumSearchComponent({\n  openSearch,\n  setOpenSearch,\n  album,\n  setAlbum\n}) {\n  _s();\n  const [albumSearch, setAlbumSearch] = useState(\"\");\n  const [albumsResult, setAlbumsResult] = useState({\n    albums: {\n      items: [{\n        artists: [{\n          name: \"\"\n        }],\n        images: [{\n          url: \"\"\n        }]\n      }]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      visibility: openSearch ? 'visible' : 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: dialogBackgroundStyle(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputAlbumStyle(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search for an album...\",\n          onKeyDown: e => {\n            setAlbumSearch(e.target.value);\n            if (e.key === 'Enter') {\n              spotifyAlbumSearch(albumSearch).then(res => res.json()).then(data => console.log(data));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: albumResultsStyle(),\n          children: albumsResult.albums.items.map(album => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: album.images[0].url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAlbumsResult(spotifyAlbumSearch(albumSearch)),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenSearch(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 107\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(AlbumSearchComponent, \"hZeUNvLbPyAqESnIx5bOMsu43gk=\");\n_c = AlbumSearchComponent;\nvar _c;\n$RefreshReg$(_c, \"AlbumSearchComponent\");","map":{"version":3,"names":["useState","spotifyAlbumSearch","albumResultsStyle","dialogBackgroundStyle","inputAlbumStyle","jsxDEV","_jsxDEV","AlbumSearchComponent","openSearch","setOpenSearch","album","setAlbum","_s","albumSearch","setAlbumSearch","albumsResult","setAlbumsResult","albums","items","artists","name","images","url","style","visibility","children","placeholder","onKeyDown","e","target","value","key","then","res","json","data","console","log","fileName","_jsxFileName","lineNumber","columnNumber","map","src","onClick","_c","$RefreshReg$"],"sources":["/Users/richardulysse/top-100-list/client/src/Components/AlbumSearchComponent.js"],"sourcesContent":["import { useState } from \"react\";\nimport { spotifyAlbumSearch } from \"../Functions/SpotifyCalls\";\nimport { albumResultsStyle, dialogBackgroundStyle, inputAlbumStyle } from \"../Styles/StyleFunctions\";\n\nexport default function AlbumSearchComponent ({openSearch,setOpenSearch,album,setAlbum}) {\n\n    const [albumSearch,setAlbumSearch] = useState(\"\");\n    const [albumsResult,setAlbumsResult] = useState({\n        albums : {\n            items: [\n                {\n                artists: [{\n                    name: \"\"\n                }\n            ],\n            images: [{\n                url: \"\"\n            }]\n            }]\n        }\n    });\n\n    return (\n        <div style = {{\n             visibility: openSearch ? 'visible' : 'hidden'\n            }}>\n            <div style = {dialogBackgroundStyle()}>\n                <div style = {inputAlbumStyle()}>\n                    <input placeholder=\"Search for an album...\" onKeyDown = {\n                        (e) => \n                        {\n                            setAlbumSearch(e.target.value);\n                            if (e.key === 'Enter') {\n                                spotifyAlbumSearch(albumSearch)\n                                .then(res => res.json())\n                                .then(data => console.log(data))\n                        }}\n                        }>\n                    </input>\n                    <br />\n                <div style = {albumResultsStyle()}>\n                    {albumsResult.albums.items.map((album) => {\n                        return <img src = {album.images[0].url}></img>\n                    })}\n                </div>\n                <button onClick = {() => setAlbumsResult(spotifyAlbumSearch(albumSearch))}>Search</button><button onClick = {() => setOpenSearch(false)}>\n                Close\n                </button>  \n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}