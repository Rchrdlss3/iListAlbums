{"ast":null,"code":"var _jsxFileName = \"/Users/richardulysse/top-100-list/client/src/Components/AlbumSearchComponent.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { spotifyAlbumSearch } from \"../Functions/SpotifyCalls\";\nimport { albumResultsStyle, dialogBackgroundStyle, inputAlbumStyle } from \"../Styles/StyleFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlbumSearchComponent({\n  album,\n  setAlbum,\n  openSearch,\n  setOpenSearch\n}) {\n  _s();\n  const [albumSearch, setAlbumSearch] = useState(\"\");\n  const [albumsResult, setAlbumsResult] = useState({\n    albums: {\n      items: [{\n        artists: [{\n          name: \"\"\n        }],\n        images: [{\n          url: \"\"\n        }],\n        name: \"\"\n      }]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: openSearch ? 'block' : 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      left: 0,\n      zIndex: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: dialogBackgroundStyle(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputAlbumStyle(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search for an album...\",\n          onKeyDown: e => {\n            setAlbumSearch(e.target.value);\n            if (e.key === 'Enter') {\n              spotifyAlbumSearch(albumSearch).then(res => res.json()).then(data => setAlbumsResult(data));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: albumResultsStyle(),\n          children: albumsResult.albums.items.map((album, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'row',\n                backgroundColor: idx % 2 == 0 ? 'red' : 'blue',\n                margin: '5px',\n                padding: '5px',\n                borderRadius: '5px'\n              },\n              onClick: () => setAlbum({}),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  width: '100px',\n                  height: '100px'\n                },\n                src: album.images[0].url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flexDirection: 'column',\n                  marginLeft: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: album.artists[0].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 29\n                }, this), album.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => spotifyAlbumSearch(albumSearch).then(res => res.json()).then(data => setAlbumsResult(data)),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenSearch(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 86\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(AlbumSearchComponent, \"AobK1VDvQXjUDvy0/8pj/9X570g=\");\n_c = AlbumSearchComponent;\nvar _c;\n$RefreshReg$(_c, \"AlbumSearchComponent\");","map":{"version":3,"names":["useState","spotifyAlbumSearch","albumResultsStyle","dialogBackgroundStyle","inputAlbumStyle","jsxDEV","_jsxDEV","AlbumSearchComponent","album","setAlbum","openSearch","setOpenSearch","_s","albumSearch","setAlbumSearch","albumsResult","setAlbumsResult","albums","items","artists","name","images","url","style","display","position","top","right","left","zIndex","children","placeholder","onKeyDown","e","target","value","key","then","res","json","data","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","flexDirection","backgroundColor","margin","padding","borderRadius","onClick","width","height","src","marginLeft","_c","$RefreshReg$"],"sources":["/Users/richardulysse/top-100-list/client/src/Components/AlbumSearchComponent.js"],"sourcesContent":["import { useState } from \"react\";\nimport { spotifyAlbumSearch } from \"../Functions/SpotifyCalls\";\nimport { albumResultsStyle, dialogBackgroundStyle, inputAlbumStyle } from \"../Styles/StyleFunctions\";\n\nexport default function AlbumSearchComponent ({album,setAlbum,openSearch,setOpenSearch}) {\n\n    const [albumSearch,setAlbumSearch] = useState(\"\");\n    const [albumsResult,setAlbumsResult] = useState({\n        albums : {\n            items: [\n                {\n                artists: [{\n                    name: \"\"\n                }\n            ],\n            images: [{\n                url: \"\"\n            }],\n            name: \"\"\n            }]\n        }\n    });\n\n    return (\n        <div style = {{\n            display: openSearch ? 'block' : 'none',\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            left: 0,\n            zIndex: 1\n            }}>\n            <div style = {dialogBackgroundStyle()}>\n                <div style = {inputAlbumStyle()}>\n                    <input placeholder=\"Search for an album...\" onKeyDown = {\n                        (e) => \n                        {\n                            setAlbumSearch(e.target.value);\n                            if (e.key === 'Enter') {\n                                spotifyAlbumSearch(albumSearch)\n                                .then(res => res.json())\n                                .then(data => setAlbumsResult(data))\n                        }}\n                        }>\n                    </input>\n                    <br />\n                <div style = {albumResultsStyle()}>\n                    {albumsResult.albums.items.map((album,idx) => {\n                        return <div style = {{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            backgroundColor: idx%2 == 0 ? 'red' : 'blue',\n                            margin: '5px',\n                            padding: '5px',\n                            borderRadius: '5px'\n                        }}\n                        onClick = {() => setAlbum({\n                            \n                        })}\n                        >\n                            <img style = {{\n                            width: '100px',\n                            height: '100px'\n                            }} src = {album.images[0].url}/>\n                            <div style = {{\n                                flexDirection : 'column',\n                                marginLeft: '10px'\n                            }}> \n                            <p>{album.artists[0].name}</p>\n                            {album.name}\n                            </div>\n                        </div>\n                    })}\n                </div>\n                <button onClick = {() =>                                 \n                                spotifyAlbumSearch(albumSearch)\n                                .then(res => res.json())\n                                .then(data => setAlbumsResult(data))}>Search</button><button onClick = {() => setOpenSearch(false)}>\n                Close\n                </button>  \n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}